/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, #7ed56f85, #28b485c5),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
}

.logo-box {
  /* in order for absolute to work, we need to set the parent header to relative */
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /* below is needed to make sure that the text-box is in the middle */
  transform: translate(-50%, -50%);
  /* below is needed to make sure the button is in the center */
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* below makes sure that the animation is not shaky */
  backface-visibility: hidden;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  /* below is needed to make the animation work */
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* below are other common settings */
  /* animation-delay: 3s; */
  /* animation-iteration-count: 3; */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  /* below is a shorter way of writing  */
  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    /* negative value means it moves to the left */
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    /* below makes it look like it does without animation */
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
    0% {
      opacity: 0;
      /* moving the button down so the value is positive */
      transform: translateY(30px);
    }
  
    80% {
      transform: translateY(-10px);
    }
  
    100% {
      opacity: 1;
      transform: translate(0);
    }
  }

/* link is if it hasnt been clicked on yet, visited is after the user clicked on it */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  /* below is needed to prevent it from overlapping the text above */
  display: inline-block;
  border-radius: 100px;
  /* below is needed for animations for hover and active state */
  transition: all 0.2s;
  position: relative;
}

.btn:hover {
  /* below is needed to make the button move up */
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

/* what needs to happen when clicked */
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
  background-color: #fff;
  color: #777;
}

/* below is a child element of the button so we want it to be 100% height and width */
.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  /* the reference should be the button so we need to make this relative */
  position: absolute;
  top: 0;
  left: 0;
  /* it has to be hidden behind the button so -1  */
  z-index: -1;
  transition: all .4s;
}

.btn-white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  /* below is to fade out */
  opacity: 0;
}

.btn-animated {
    /* last value is animation delay */
    animation: moveInBottom .5s ease-out .75s;
    /* below applies 0% styles before the animation starts */
    animation-fill-mode: backwards;
}
